.\" Man page generated from reStructuredText.
.
.TH "CONFERATUR" "1" "Feb 08, 2019" "" "Conferatur"
.SH NAME
conferatur \- Conferatur Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.INDENT 3.5
Conferatur main command line script

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: conferatur [\-h]
                  [\-\-log\-level {critical,fatal,error,warn,warning,info,debug,notset}]
                  [\-\-version]
                  {normalization,api}
.ft P
.fi
.UNINDENT
.UNINDENT
.SH POSITIONAL ARGUMENTS
.INDENT 0.0
.TP
.Bsubcommand
Possible choices: normalization, api
.UNINDENT
.SH NAMED ARGUMENTS
.INDENT 0.0
.TP
.B\-\-log\-level
Possible choices: critical, fatal, error, warn, warning, info, debug, notset
.sp
set the logging output level
.sp
Default: warning
.TP
.B\-\-version
output conferatur version number
.sp
Default: False
.UNINDENT
.UNINDENT
.UNINDENT
.SH SUBCOMMANDS
.INDENT 0.0
.INDENT 3.5
.SS Subcommand normalization
.sp
Apply normalization to given input

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: conferatur normalization [\-h] [\-i file] [\-o file] [\-\-alphanumeric]
                                [\-\-alphanumericunicode] [\-\-config config]
                                [\-\-configfile file [encoding]]
                                [\-\-file normalizer file [encoding]]
                                [\-\-localizedfile normalizer locale path [encoding]]
                                [\-\-lowercase]
                                [\-\-regexreplace search [replace]]
                                [\-\-replace search [replace]]
                                [\-\-replacewords search replace] [\-\-unidecode]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS input and output files
.INDENT 0.0
.INDENT 3.5
You can provide multiple input and output files, each preceded by \-i and \-o
respectively.
If no input file is given, only one output file can be used.
If using both multiple input and output files there should be an equal amount
of each. Each processed input file will then be written to the corresponding
output file.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B\-i, \-\-inputfile
read input from this file, defaults to STDIN
.TP
.B\-o, \-\-outputfile
write output to this file, defaults to STDOUT
.UNINDENT
.SS available normalizers
.INDENT 0.0
.INDENT 3.5
A list of normalizers to execute on the input, can be one or more normalizers
which are applied sequentially.
The program will automatically find the normalizer in conferatur.normalization.core,
then conferatur.normalization and finally in the global namespace.
At least one normalizer needs to be provided.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B\-\-alphanumeric
Simple alphanumeric filter
.INDENT 7.0
.TP
.B example text
"He\(aqs a lumberjack, and he\(aqs okay!"
.TP
.B example return
"Hesalumberjackandhesokay"
.UNINDENT
.TP
.B\-\-alphanumericunicode
Simple alphanumeric filter, takes into account all unicode alphanumeric characters
.INDENT 7.0
.TP
.B example text
"Das, √∂der die Flipper\-W√•ld Gesp√ºtt!"
.TP
.B example result
"Das√∂derdieFlipperW√•ldGesp√ºtt"
.UNINDENT
.TP
.B\-\-config
Use config notation to define normalization rules. This notation is a list of normalizers, one per line, with optional arguments (separated by a space).
.sp
The normalizers can be any of the core normalizers, or you can refer to your own normalizer class (like you would use in a python import, eg. \fImy.own.package.MyNormalizerClass\fP).
.INDENT 7.0
.TP
.B Additional rules:
.INDENT 7.0
.IP \(bu 2
Normalizer names are case\-insensitive.
.IP \(bu 2
Arguments MAY be wrapped in double quotes.
.IP \(bu 2
If an argument contains a space, newline or double quote, it MUST be wrapped in double quotes.
.IP \(bu 2
A double quote itself is represented in this quoted argument as two double quotes: \fI""\fP\&.
.UNINDENT
.UNINDENT
.sp
The normalization rules are applied top\-to\-bottom and follow this format:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
Normalizer1 arg1 "arg 2"
# This is a comment

Normalizer2
# (Normalizer2 has no arguments)
Normalizer3 "This is argument 1
Spanning multiple lines
" "argument 2"
Normalizer4 "argument with double quote ("")"
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B param str config
configuration text
.TP
.B example text
"He bravely turned his tail and fled"
.TP
.B example config
\(aq# using a simple config filenLowercase nn    # it even supports commentsn# If there is a space in the argument, make sure you quote it though!n  regexreplace "y t" "Y T"n n      # extraneous whitespaces are ignored n     replace   e     an\(aq
.TP
.B example return
"ha bravalY Turnad his tail and flad"
.UNINDENT
.TP
.B\-\-configfile
Load config from a file, see \fBConfig\fP for information about config notation
.INDENT 7.0
.TP
.B param typing.io.TextIO file
The file
.TP
.B param str encoding
The file encoding
.TP
.B example text
"He bravely turned his tail and fled"
.TP
.B example file
"./resources/test/normalizers/configfile.conf"
.TP
.B example encoding
"UTF\-8"
.TP
.B example return
"ha bravalY Turnad his tail and flad"
.UNINDENT
.TP
.B\-\-file
Read one per line and pass it to the given normalizer
.INDENT 7.0
.TP
.B param str|class normalizer
Normalizer name (or class)
.TP
.B param str file
The file to read rules from
.TP
.B param str encoding
The file encoding
.TP
.B example text
"This is an Ex\-Parakeet"
.TP
.B example normalizer
"regexreplace"
.TP
.B example file
"./resources/test/normalizers/regexreplace/en_US"
.TP
.B example encoding
"UTF\-8"
.TP
.B example return
"This is an Ex Parrot"
.UNINDENT
.TP
.B\-\-localizedfile
Reads and applies normalization rules from a locale\-based file, it will automatically determine the "best fit" for a given locale, if one is available.
.INDENT 7.0
.TP
.B param str|class normalizer
Normalizer name (or class)
.TP
.B param str locale
Which locale to search for
.TP
.B param PathLike path
Location of available locale files
.TP
.B param str encoding
The file encoding
.TP
.B example text
"This is an Ex\-Parakeet"
.TP
.B example normalizer
"regexreplace"
.TP
.B example path
"./resources/test/normalizers/regexreplace"
.TP
.B example locale
"en"
.TP
.B example encoding
"UTF\-8"
.TP
.B example return
"This is an Ex Parrot"
.UNINDENT
.TP
.B\-\-lowercase
Lowercase the text
.INDENT 7.0
.TP
.B example text
"Easy, Mungo, easy... Mungo..."
.TP
.B example result
"easy, mungo, easy... mungo..."
.UNINDENT
.TP
.B\-\-regexreplace
Simple regex replace. By default the pattern is interpreted
case\-sensitive.
.sp
Case\-insensitivity is supported by adding inline modifiers.
.sp
You might want to use capturing groups to preserve the case. When replacing a character not captured, the information about its case is lost...
.sp
Eg. would replace "HAHA! Hahaha!" to "HeHe! Hehehe!":
.INDENT 7.0
.INDENT 3.5
.TS
center;
|l|l|.
_
T{
search
T}	T{
replace
T}
_
T{
\fB(?i)(h)a\fP
T}	T{
\fB\e1e\fP
T}
_
.TE
.UNINDENT
.UNINDENT
.sp
No regex flags are set by default, you can set them yourself though in the regex, and combine them at will, eg. multiline, dotall and ignorecase.
.sp
Eg. would replace "New<CRLF>line" to "newline":
.INDENT 7.0
.INDENT 3.5
.TS
center;
|l|l|.
_
T{
search
T}	T{
replace
T}
_
T{
\fB(?msi)new.line\fP
T}	T{
\fBnewline\fP
T}
_
.TE
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B example text
"HAHA! Hahaha!"
.TP
.B example search
\(aq(?i)(h)a\(aq
.TP
.B example replace
r\(aq1e\(aq
.TP
.B example result
"HeHe! Hehehe!"
.UNINDENT
.TP
.B\-\-replace
Simple search replace
.INDENT 7.0
.TP
.B param str search
Text to search for
.TP
.B param str replace
Text to replace with
.TP
.B example text
"Nudge nudge!"
.TP
.B example search
"nudge"
.TP
.B example replace
"wink"
.TP
.B example return
"Nudge wink!"
.UNINDENT
.TP
.B\-\-replacewords
Simple search replace that only replaces "words", the first letter will be
checked case insensitive as well with preservation of case..
.INDENT 7.0
.TP
.B param str search
Word to search for
.TP
.B param str replace
Replace with
.TP
.B example text
"She has a heart of formica"
.TP
.B example search
"a"
.TP
.B example replace
"the"
.TP
.B example result
"She has the heart of formica"
.UNINDENT
.TP
.B\-\-unidecode
Unidecode characters to ASCII form, see \fI\%Python\(aqs Unidecode package\fP for more info.
.INDENT 7.0
.TP
.B example text
"ùñÇùñäùñìùñì ùñéùñòùñô ùñâùñÜùñò ùïπùñöùñìùñòùñô√ºùñàùñê ùñåùñéùñô ùñöùñìùñâ ùïæùñëùñîùñôùñäùñóùñíùñäùñûùñäùñó?"
.TP
.B example return
"Wenn ist das Nunstuck git und Slotermeyer?"
.UNINDENT
.UNINDENT
.SS Subcommand api
.sp
See api for more information on usage and available jsonrpc methods.
.sp
Make conferatur available through a rudimentary \fI\%JSON\-RPC\fP interface

.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
usage: conferatur api [\-h] [\-\-debug] [\-\-host HOST] [\-\-port PORT]
                      [\-\-entrypoint ENTRYPOINT] [\-\-with\-explorer]
                      [\-\-list\-methods]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Named Arguments
.INDENT 0.0
.TP
.B\-\-debug
run in debug mode
.sp
Default: False
.TP
.B\-\-host
hostname or ip to serve api
.TP
.B\-\-port
port used by the server
.sp
Default: 8080
.TP
.B\-\-entrypoint
the jsonrpc api address
.sp
Default: "/api"
.TP
.B\-\-with\-explorer
also create the explorer to test api calls with
.sp
Default: False
.TP
.B\-\-list\-methods
list the available jsonrpc methods
.sp
Default: False
.UNINDENT
.UNINDENT
.UNINDENT
.SH BASH COMPLETION
.sp
Bash completion is supported through \fBargcomplete\fP\&.
.INDENT 0.0
.INDENT 3.5
.SS Setting up bash completion
.sp
If you use \fBbash\fP as your shell, \fBconferatur\fP can use \fI\%argcomplete\fP for auto\-completion.
.sp
For this \fBargcomplete\fP needs to be installed \fBand\fP enabled.
.SS Installing argcomplete
.INDENT 0.0
.IP 1. 3
Install argcomplete using:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
pip install argcomplete
.ft P
.fi
.UNINDENT
.UNINDENT
.IP 2. 3
For global activation of all argcomplete enabled python applications, run:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
activate\-global\-python\-argcomplete
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS Alternative argcomplete configuration
.INDENT 0.0
.IP 1. 3
For permanent (but not global) \fBconferatur\fP activation, use:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
register\-python\-argcomplete conferatur >> ~/.bashrc
.ft P
.fi
.UNINDENT
.UNINDENT
.IP 2. 3
For one\-time activation of argcomplete for \fBconferatur\fP only, use:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
eval "$(register\-python\-argcomplete conferatur)"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH AUTHOR
EBU
.SH COPYRIGHT
2019, EBU
.\" Generated by docutils manpage writer.
.
